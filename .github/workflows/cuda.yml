name: cuda

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-cuda
  cancel-in-progress: true

jobs:
  # Build libamrex and all tests for CUDA with LLVM Clang + libc++ + CTK 11.7
  tests-cuda11-clang:
    name: Clang@15 CUDA@11.7 C++17 Release [tests]
    runs-on: ubuntu-22.04
    env:
      CC: clang-15
      CXX: clang++-15
      CUDACXX: clang++-15
      CUDAHOSTCXX: clang++-15
      CUDAFLAGS: "-stdlib=libc++"
      LDFLAGS: "-stdlib=libc++"
      CUDAARCHS: 70
      AMReX_CUDA_ARCH: 7.0
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: |
        .github/workflows/dependencies/dependencies_llvm_cuda11_ubuntu22.sh
        .github/workflows/dependencies/dependencies_ccache.sh 4.2
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Build & Install
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=235M
        export CCACHE_LOGFILE=${{ github.workspace }}/ccache.log.txt
        ccache -z

        export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

        cmake -S . -B build                              \
            -DCMAKE_VERBOSE_MAKEFILE=ON                  \
            -DAMReX_MPI=OFF                              \
            -DAMReX_EB=OFF                               \
            -DAMReX_ENABLE_TESTS=OFF                     \
            -DAMReX_FORTRAN=OFF                          \
            -DAMReX_PARTICLES=OFF                        \
            -DAMReX_GPU_BACKEND=CUDA                     \
            -DCMAKE_CUDA_COMPILER_LAUNCHER=ccache        \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

        cmake --build build -j 2

        ccache -s -v
        du -hs ~/.cache/ccache

        cat ${{ github.workspace }}/ccache.log.tx

  save_pr_number:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $PR_NUMBER > pr_number.txt
      - uses: actions/upload-artifact@v3
        with:
          name: pr_number
          path: pr_number.txt
          retention-days: 1
